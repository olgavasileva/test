
.filters-list.col-xs-12
  %label.filter-name.col-xs-12
    .col-xs-8.col-xs-push-2 All
    %input.data-filter{:type=>'checkbox', :data=>{:exclude=>'true', :filter=>''}}
    .data-filter-visual.col-xs-2.col-xs-push-2
  %label.filter-name.col-xs-12
    .col-xs-8.col-xs-push-2 Followers
    %input.data-filter{:type=>'checkbox', :data=>{:filter=>'follower'}}
    .data-filter-visual.col-xs-2.col-xs-push-2
  %label.filter-name.col-xs-12
    .col-xs-8.col-xs-push-2 Following
    %input.data-filter{:type=>'checkbox', :data=>{:filter=>'following'}}
    .data-filter-visual.col-xs-2.col-xs-push-2

  -if(current_user.groups.count>0 || true)
    %label.collapse-trigger.filter-name.col-xs-12{:data=>{:toggle=>'collapse',:target=>'.group-list-item'}}
      %input.data-filter{:type=>'checkbox'}
      .data-filter-visual.col-xs-2
      .col-xs-8 Groups
      %label.col-xs-2
        %input.data-filter{:type=>'checkbox', :data=>{:exclude=>'true',:replace=>'group_id',:filter=>'all_groups'}}
        .data-filter-visual
      -current_user.groups.all.each do |g|
        %label.filter-name.col-xs-12.filter-name
          =g.name
          %input.data-filter{:type=>'checkbox', :data=>{:filter=>'group_id',:value=>"#{g.id}"}}
          .data-filter-visual

  :javascript
    if(!window.tcHAndlers){
      window.tcHAndlers={};
    }
    $(function(){
        if(!window.tcHAndlers.filterSelectionTrigger){
            window.tcHAndlers.filterSelectionTrigger=$('.filters-list').on('change','.data-filter[data-filter]',function(event){

              var filtersList=$(event.originalEvent.currentTarget),
              is_exclusive=!!$(this).data('exclude'),
              replaces=$(this).data('replace'),
              filter_value=$(this).data('value'),
              filter=$(this).data('filter'),
              filterSet=JSON.parse(filtersList.data('filters-set')||'{}');



              if(!filter){
                filterSet={}
              }
              else if(!this.checked){
                delete filterSet[filter]
              }
              else{
                if(filter_value || filter_value=== 0 || filter_value===''){
                  filterSet[filter]=filter_value
                }
                else{
                  filterSet[filter]=true
                }
              }

              if(replaces){
                delete filterSet[replaces];
              }


              filtersList.data('filters-set',JSON.stringify(filterSet));

              if(!this.checked){
                return;
              }

              if(is_exclusive){
                var qstring=""
                if(replaces){
                  qstring='="'+replaces+'"';
                }

                filtersList.find('.data-filter[data-filter'+qstring+'], [data-exclude="true"]:not([data-replace])').attr('checked',false);

              }
              else{
                $(event.originalEvent.currentTarget).find('[data-exclude="true"]:not([data-replace]), [data-replace="'+filter+'"]').attr('checked',false);
              }

              this.checked=true;
            })
        }

    })